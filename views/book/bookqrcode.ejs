<body>

    <script src="https://cdn.jsdelivr.net/npm/jsqr@1.1.1/dist/jsQR.js"></script>
    <br>

    <div class="center">
        <h2> &nbsp;&nbsp;<strong>請掃描QR Code</strong></h2>
        <br>
        <form action="/book/bookqrcode" method="POST">
            <input id="bookqrinput" name="bookqrcode" autofocus />
            <br><br>
            <input class="borrowbutton" type="submit" />
        </form>

        <canvas id="canvas"></canvas>
    </div>

    <!-- book history part:  -->
    <ul id="result">
    </ul>
    <script src="https://unpkg.com/dexie@latest/dist/dexie.js"></script>
    <script>
        var db = new Dexie("bookqrcode_database");
        db.version(1).stores({
            bookqrcode: '++id,code'
        });
        (async function() {
            let data = await db.bookqrcode.toArray();
            console.log(data);
            document.getElementById('result').innerHTML = data.map(d => `<li>${d.code.data}</li>`).join('');
        })();
    </script>


    <nav class="bottomnav fixed-bottom">
        <a href="/item/userindex" class="nav__link">
            <i class="material-icons">
                home
            </i>
            <span class="nav__text">主頁</span>
        </a>
        <a href="/item/usersearch" class="nav__link nav__link--active">
            <i class="material-icons">
                search
            </i>
            <span class="nav__text">搜尋</span>
        </a>
        <a href="/item/usernoti" class="nav__link">
            <i class="material-icons">
                email
            </i>
            <span class="nav__text">通知</span>
        </a>
        <a href="/item/useraccount" class="nav__link">
            <i class="material-icons">
                account_circle
            </i>
            <span class="nav__text">帳戶</span>
        </a>
    </nav>
</body>


<script>
    var video = document.createElement("video");
    var canvasElement = document.getElementById("canvas");
    var canvas = canvasElement.getContext("2d");
    var qrinput = document.getElementById('qrinput');

    function drawLine(begin, end, color) {
        canvas.beginPath();
        canvas.moveTo(begin.x, begin.y);
        canvas.lineTo(end.x, end.y);
        canvas.lineWidth = 4;
        canvas.strokeStyle = color;
        canvas.stroke();
    }

    function onVideoFrame() {
        if (video.readyState === video.HAVE_ENOUGH_DATA) {
            canvasElement.height = video.videoHeight;
            canvasElement.width = video.videoWidth;
            canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
            var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
            var code = jsQR(imageData.data, imageData.width, imageData.height, {
                inversionAttempts: "dontInvert"
            });
            if (code) {}
            drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
            drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
            drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
            drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
            qrinput.value = code.data;
        }
    }
    requestAnimationFrame(onVideoFrame);
    (async function() {
        video.srcObject = await navigator.mediaDevices.getUserMedia({
            video: {
                facingMode: "environment"
            }
        });
        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
        video.play();
        requestAnimationFrame(onVideoFrame);
    })();
</script>